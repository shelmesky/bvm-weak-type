
state 0
	$accept: .contract_declaration $end 

	CONTRACT  shift 2
	.  error

	contract_declaration  goto 1

state 1
	$accept:  contract_declaration.$end 
	contract_declaration:  contract_declaration.NEWLINE 

	$end  accept
	NEWLINE  shift 3
	.  error


state 2
	contract_declaration:  CONTRACT.IDENT contract_read LBRACE NEWLINE contract_body RBRACE 

	IDENT  shift 4
	.  error


state 3
	contract_declaration:  contract_declaration NEWLINE.    (100)

	.  reduce 100 (src line 310)


state 4
	contract_declaration:  CONTRACT IDENT.contract_read LBRACE NEWLINE contract_body RBRACE 
	contract_read: .    (97)

	READ  shift 6
	.  reduce 97 (src line 300)

	contract_read  goto 5

state 5
	contract_declaration:  CONTRACT IDENT contract_read.LBRACE NEWLINE contract_body RBRACE 

	LBRACE  shift 7
	.  error


state 6
	contract_read:  READ.    (98)

	.  reduce 98 (src line 302)


state 7
	contract_declaration:  CONTRACT IDENT contract_read LBRACE.NEWLINE contract_body RBRACE 

	NEWLINE  shift 8
	.  error


state 8
	contract_declaration:  CONTRACT IDENT contract_read LBRACE NEWLINE.contract_body RBRACE 
	contract_data: .    (94)

	DATA  shift 11
	.  reduce 94 (src line 289)

	contract_data  goto 10
	contract_body  goto 9

state 9
	contract_declaration:  CONTRACT IDENT contract_read LBRACE NEWLINE contract_body.RBRACE 

	RBRACE  shift 12
	.  error


state 10
	contract_body:  contract_data.statements 
	statements: .    (1)

	.  reduce 1 (src line 138)

	statements  goto 13

state 11
	contract_data:  DATA.LBRACE NEWLINE var_declarations NEWLINE RBRACE NEWLINE 

	LBRACE  shift 14
	.  error


state 12
	contract_declaration:  CONTRACT IDENT contract_read LBRACE NEWLINE contract_body RBRACE.    (99)

	.  reduce 99 (src line 305)


state 13
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	contract_body:  contract_data statements.    (96)

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  reduce 96 (src line 294)

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 14
	contract_data:  DATA LBRACE.NEWLINE var_declarations NEWLINE RBRACE NEWLINE 

	NEWLINE  shift 33
	.  error


state 15
	statements:  statements NEWLINE.    (2)

	.  reduce 2 (src line 140)


state 16
	statements:  statements switch.    (3)

	.  reduce 3 (src line 141)


state 17
	statements:  statements statement.NEWLINE 

	NEWLINE  shift 34
	.  error


state 18
	switch:  SWITCH.expr NEWLINE case default 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 35
	index  goto 45

state 19
	statement:  variable.ASSIGN expr 
	statement:  variable.ADD_ASSIGN expr 
	statement:  variable.SUB_ASSIGN expr 
	statement:  variable.MUL_ASSIGN expr 
	statement:  variable.DIV_ASSIGN expr 
	statement:  variable.MOD_ASSIGN expr 

	ADD_ASSIGN  shift 53
	SUB_ASSIGN  shift 54
	MUL_ASSIGN  shift 55
	DIV_ASSIGN  shift 56
	MOD_ASSIGN  shift 57
	ASSIGN  shift 52
	.  error


state 20
	index:  index.LBRACKET expr RBRACKET 
	statement:  index.ASSIGN expr 

	LBRACKET  shift 58
	ASSIGN  shift 59
	.  error


state 21
	statement:  VAR.IDENT ASSIGN expr 
	statement:  VAR.ident_list 

	IDENT  shift 60
	.  error

	ident_list  goto 61

state 22
	statement:  IF.expr LBRACE statements RBRACE elif else 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 62
	index  goto 45

state 23
	statement:  BREAK.    (33)

	.  reduce 33 (src line 199)


state 24
	statement:  CONTINUE.    (34)

	.  reduce 34 (src line 200)


state 25
	statement:  RETURN.    (35)
	statement:  RETURN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  reduce 35 (src line 201)

	expr  goto 63
	index  goto 45

state 26
	statement:  WHILE.expr LBRACE statements RBRACE 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 64
	index  goto 45

state 27
	statement:  FUNC.CALL par_declarations RPAREN LBRACE statements RBRACE 

	CALL  shift 65
	.  error


state 28
	statement:  CALL.params RPAREN 
	params: .    (5)

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  reduce 5 (src line 145)

	params  goto 66
	expr  goto 67
	index  goto 45

state 29
	statement:  CALLCONTRACT.cntparams RPAREN 
	cntparams: .    (8)

	IDENT  shift 69
	.  reduce 8 (src line 151)

	cntparams  goto 68

state 30
	statement:  FOR.IDENT IN expr LBRACE statements RBRACE 
	statement:  FOR.IDENT COMMA IDENT IN expr LBRACE statements RBRACE 
	statement:  FOR.IDENT IN expr DOUBLEDOT expr LBRACE statements RBRACE 

	IDENT  shift 70
	.  error


state 31
	variable:  IDENT.    (11)

	.  reduce 11 (src line 157)


state 32
	index:  INDEX.expr RBRACKET 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 71
	index  goto 45

state 33
	contract_data:  DATA LBRACE NEWLINE.var_declarations NEWLINE RBRACE NEWLINE 

	VAR  shift 74
	.  error

	var_declaration  goto 73
	var_declarations  goto 72

state 34
	statements:  statements statement NEWLINE.    (4)

	.  reduce 4 (src line 142)


state 35
	switch:  SWITCH expr.NEWLINE case default 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	NEWLINE  shift 75
	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  error


state 36
	expr:  LPAREN.expr RPAREN 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 95
	index  goto 45

state 37
	expr:  INT.    (50)

	.  reduce 50 (src line 227)


state 38
	expr:  FLOAT.    (51)

	.  reduce 51 (src line 228)


state 39
	expr:  STRING.    (52)

	.  reduce 52 (src line 229)


state 40
	expr:  QSTRING.    (53)

	.  reduce 53 (src line 230)


state 41
	expr:  TRUE.    (54)

	.  reduce 54 (src line 231)


state 42
	expr:  FALSE.    (55)

	.  reduce 55 (src line 232)


state 43
	expr:  CALL.params RPAREN 
	params: .    (5)

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  reduce 5 (src line 145)

	params  goto 96
	expr  goto 67
	index  goto 45

state 44
	expr:  CALLCONTRACT.cntparams RPAREN 
	cntparams: .    (8)

	IDENT  shift 69
	.  reduce 8 (src line 151)

	cntparams  goto 97

state 45
	index:  index.LBRACKET expr RBRACKET 
	expr:  index.    (58)

	LBRACKET  shift 58
	.  reduce 58 (src line 235)


state 46
	expr:  ENV.    (59)

	.  reduce 59 (src line 236)


state 47
	expr:  IDENT.    (60)

	.  reduce 60 (src line 237)


state 48
	expr:  LBRACKET.exprlist RBRACKET 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 99
	index  goto 45
	exprlist  goto 98

state 49
	expr:  LBRACE.exprmaplist RBRACE 

	STRING  shift 101
	.  error

	exprmaplist  goto 100

state 50
	expr:  SUB.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 102
	index  goto 45

state 51
	expr:  NOT.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 103
	index  goto 45

state 52
	statement:  variable ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 104
	index  goto 45

state 53
	statement:  variable ADD_ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 105
	index  goto 45

state 54
	statement:  variable SUB_ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 106
	index  goto 45

state 55
	statement:  variable MUL_ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 107
	index  goto 45

state 56
	statement:  variable DIV_ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 108
	index  goto 45

state 57
	statement:  variable MOD_ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 109
	index  goto 45

state 58
	index:  index LBRACKET.expr RBRACKET 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 110
	index  goto 45

state 59
	statement:  index ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 111
	index  goto 45

state 60
	statement:  VAR IDENT.ASSIGN expr 
	ident_list:  IDENT.    (84)

	ASSIGN  shift 112
	.  reduce 84 (src line 264)


state 61
	statement:  VAR ident_list.    (31)
	ident_list:  ident_list.IDENT 

	IDENT  shift 113
	.  reduce 31 (src line 197)


state 62
	statement:  IF expr.LBRACE statements RBRACE elif else 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	LBRACE  shift 114
	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  error


state 63
	statement:  RETURN expr.    (36)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 36 (src line 202)


state 64
	statement:  WHILE expr.LBRACE statements RBRACE 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	LBRACE  shift 115
	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  error


state 65
	statement:  FUNC CALL.par_declarations RPAREN LBRACE statements RBRACE 
	par_declarations: .    (87)

	IDENT  shift 119
	.  reduce 87 (src line 273)

	ident_list  goto 118
	par_declaration  goto 117
	par_declarations  goto 116

state 66
	params:  params.COMMA expr 
	statement:  CALL params.RPAREN 

	COMMA  shift 120
	RPAREN  shift 121
	.  error


state 67
	params:  expr.    (6)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 6 (src line 147)


state 68
	cntparams:  cntparams.COMMA IDENT COLON expr 
	statement:  CALLCONTRACT cntparams.RPAREN 

	COMMA  shift 122
	RPAREN  shift 123
	.  error


state 69
	cntparams:  IDENT.COLON expr 

	COLON  shift 124
	.  error


state 70
	statement:  FOR IDENT.IN expr LBRACE statements RBRACE 
	statement:  FOR IDENT.COMMA IDENT IN expr LBRACE statements RBRACE 
	statement:  FOR IDENT.IN expr DOUBLEDOT expr LBRACE statements RBRACE 

	COMMA  shift 126
	IN  shift 125
	.  error


state 71
	index:  INDEX expr.RBRACKET 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	RBRACKET  shift 127
	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  error


state 72
	var_declarations:  var_declarations.NEWLINE var_declaration 
	contract_data:  DATA LBRACE NEWLINE var_declarations.NEWLINE RBRACE NEWLINE 

	NEWLINE  shift 128
	.  error


state 73
	var_declarations:  var_declaration.    (92)

	.  reduce 92 (src line 284)


state 74
	var_declaration:  VAR.ident_list 
	var_declaration:  VAR.IDENT ASSIGN expr 

	IDENT  shift 130
	.  error

	ident_list  goto 129

state 75
	switch:  SWITCH expr NEWLINE.case default 
	case: .    (18)

	.  reduce 18 (src line 174)

	case  goto 131

state 76
	expr:  expr MUL.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 132
	index  goto 45

state 77
	expr:  expr DIV.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 133
	index  goto 45

state 78
	expr:  expr ADD.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 134
	index  goto 45

state 79
	expr:  expr SUB.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 135
	index  goto 45

state 80
	expr:  expr MOD.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 136
	index  goto 45

state 81
	expr:  expr AND.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 137
	index  goto 45

state 82
	expr:  expr OR.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 138
	index  goto 45

state 83
	expr:  expr EQ.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 139
	index  goto 45

state 84
	expr:  expr NOT_EQ.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 140
	index  goto 45

state 85
	expr:  expr LTE.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 141
	index  goto 45

state 86
	expr:  expr GTE.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 142
	index  goto 45

state 87
	expr:  expr LT.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 143
	index  goto 45

state 88
	expr:  expr GT.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 144
	index  goto 45

state 89
	expr:  expr BIT_AND.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 145
	index  goto 45

state 90
	expr:  expr BIT_OR.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 146
	index  goto 45

state 91
	expr:  expr BIT_XOR.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 147
	index  goto 45

state 92
	expr:  expr LEFT_SHIFT.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 148
	index  goto 45

state 93
	expr:  expr RIGHT_SHIFT.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 149
	index  goto 45

state 94
	expr:  expr POW.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 150
	index  goto 45

state 95
	expr:  LPAREN expr.RPAREN 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	RPAREN  shift 151
	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  error


state 96
	params:  params.COMMA expr 
	expr:  CALL params.RPAREN 

	COMMA  shift 120
	RPAREN  shift 152
	.  error


state 97
	cntparams:  cntparams.COMMA IDENT COLON expr 
	expr:  CALLCONTRACT cntparams.RPAREN 

	COMMA  shift 122
	RPAREN  shift 153
	.  error


state 98
	exprlist:  exprlist.COMMA expr 
	expr:  LBRACKET exprlist.RBRACKET 

	COMMA  shift 154
	RBRACKET  shift 155
	.  error


state 99
	exprlist:  expr.    (44)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 44 (src line 214)


state 100
	exprmaplist:  exprmaplist.COMMA STRING COLON NEWLINE expr 
	exprmaplist:  exprmaplist.COMMA STRING COLON expr 
	expr:  LBRACE exprmaplist.RBRACE 

	COMMA  shift 156
	RBRACE  shift 157
	.  error


state 101
	exprmaplist:  STRING.COLON expr 

	COLON  shift 158
	.  error


state 102
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 
	expr:  SUB expr.    (82)

	.  reduce 82 (src line 260)


state 103
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 
	expr:  NOT expr.    (83)

	.  reduce 83 (src line 261)


state 104
	statement:  variable ASSIGN expr.    (23)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 23 (src line 188)


state 105
	statement:  variable ADD_ASSIGN expr.    (24)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 24 (src line 190)


state 106
	statement:  variable SUB_ASSIGN expr.    (25)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 25 (src line 191)


state 107
	statement:  variable MUL_ASSIGN expr.    (26)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 26 (src line 192)


state 108
	statement:  variable DIV_ASSIGN expr.    (27)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 27 (src line 193)


state 109
	statement:  variable MOD_ASSIGN expr.    (28)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 28 (src line 194)


state 110
	index:  index LBRACKET expr.RBRACKET 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	RBRACKET  shift 159
	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  error


state 111
	statement:  index ASSIGN expr.    (29)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 29 (src line 195)


state 112
	statement:  VAR IDENT ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 160
	index  goto 45

state 113
	ident_list:  ident_list IDENT.    (85)

	.  reduce 85 (src line 266)


state 114
	statement:  IF expr LBRACE.statements RBRACE elif else 
	statements: .    (1)

	.  reduce 1 (src line 138)

	statements  goto 161

state 115
	statement:  WHILE expr LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 138)

	statements  goto 162

state 116
	statement:  FUNC CALL par_declarations.RPAREN LBRACE statements RBRACE 
	par_declarations:  par_declarations.COMMA par_declaration 

	COMMA  shift 164
	RPAREN  shift 163
	.  error


state 117
	par_declarations:  par_declaration.    (88)

	.  reduce 88 (src line 275)


state 118
	ident_list:  ident_list.IDENT 
	par_declaration:  ident_list.    (86)

	IDENT  shift 113
	.  reduce 86 (src line 269)


state 119
	ident_list:  IDENT.    (84)

	.  reduce 84 (src line 264)


state 120
	params:  params COMMA.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 165
	index  goto 45

state 121
	statement:  CALL params RPAREN.    (39)

	.  reduce 39 (src line 207)


state 122
	cntparams:  cntparams COMMA.IDENT COLON expr 

	IDENT  shift 166
	.  error


state 123
	statement:  CALLCONTRACT cntparams RPAREN.    (40)

	.  reduce 40 (src line 208)


state 124
	cntparams:  IDENT COLON.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 167
	index  goto 45

state 125
	statement:  FOR IDENT IN.expr LBRACE statements RBRACE 
	statement:  FOR IDENT IN.expr DOUBLEDOT expr LBRACE statements RBRACE 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 168
	index  goto 45

state 126
	statement:  FOR IDENT COMMA.IDENT IN expr LBRACE statements RBRACE 

	IDENT  shift 169
	.  error


state 127
	index:  INDEX expr RBRACKET.    (12)

	.  reduce 12 (src line 160)


state 128
	var_declarations:  var_declarations NEWLINE.var_declaration 
	contract_data:  DATA LBRACE NEWLINE var_declarations NEWLINE.RBRACE NEWLINE 

	RBRACE  shift 171
	VAR  shift 74
	.  error

	var_declaration  goto 170

state 129
	ident_list:  ident_list.IDENT 
	var_declaration:  VAR ident_list.    (90)

	IDENT  shift 113
	.  reduce 90 (src line 279)


state 130
	ident_list:  IDENT.    (84)
	var_declaration:  VAR IDENT.ASSIGN expr 

	ASSIGN  shift 172
	.  reduce 84 (src line 264)


state 131
	case:  case.CASE exprlist LBRACE statements RBRACE NEWLINE 
	switch:  SWITCH expr NEWLINE case.default 
	default: .    (20)

	CASE  shift 173
	DEFAULT  shift 175
	.  reduce 20 (src line 179)

	default  goto 174

state 132
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (63)
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	POW  shift 94
	.  reduce 63 (src line 240)


state 133
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr DIV expr.    (64)
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	POW  shift 94
	.  reduce 64 (src line 241)


state 134
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr ADD expr.    (65)
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	.  reduce 65 (src line 242)


state 135
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (66)
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	.  reduce 66 (src line 243)


state 136
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr MOD expr.    (67)
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	POW  shift 94
	.  reduce 67 (src line 244)


state 137
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (68)
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 68 (src line 245)


state 138
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (69)
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 69 (src line 246)


state 139
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (70)
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	.  reduce 70 (src line 247)


state 140
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr NOT_EQ expr.    (71)
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	.  reduce 71 (src line 248)


state 141
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr LTE expr.    (72)
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	.  reduce 72 (src line 249)


state 142
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr GTE expr.    (73)
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	.  reduce 73 (src line 250)


state 143
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (74)
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	.  reduce 74 (src line 251)


state 144
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (75)
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	.  reduce 75 (src line 252)


state 145
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr BIT_AND expr.    (76)
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	POW  shift 94
	.  reduce 76 (src line 253)


state 146
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr BIT_OR expr.    (77)
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	POW  shift 94
	.  reduce 77 (src line 254)


state 147
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr BIT_XOR expr.    (78)
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	POW  shift 94
	.  reduce 78 (src line 255)


state 148
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr LEFT_SHIFT expr.    (79)
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	POW  shift 94
	.  reduce 79 (src line 256)


state 149
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr RIGHT_SHIFT expr.    (80)
	expr:  expr.POW expr 

	POW  shift 94
	.  reduce 80 (src line 257)


state 150
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 
	expr:  expr POW expr.    (81)

	POW  shift 94
	.  reduce 81 (src line 258)


state 151
	expr:  LPAREN expr RPAREN.    (49)

	.  reduce 49 (src line 225)


state 152
	expr:  CALL params RPAREN.    (56)

	.  reduce 56 (src line 233)


state 153
	expr:  CALLCONTRACT cntparams RPAREN.    (57)

	.  reduce 57 (src line 234)


state 154
	exprlist:  exprlist COMMA.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 176
	index  goto 45

state 155
	expr:  LBRACKET exprlist RBRACKET.    (61)

	.  reduce 61 (src line 238)


state 156
	exprmaplist:  exprmaplist COMMA.STRING COLON NEWLINE expr 
	exprmaplist:  exprmaplist COMMA.STRING COLON expr 

	STRING  shift 177
	.  error


state 157
	expr:  LBRACE exprmaplist RBRACE.    (62)

	.  reduce 62 (src line 239)


state 158
	exprmaplist:  STRING COLON.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 178
	index  goto 45

state 159
	index:  index LBRACKET expr RBRACKET.    (13)

	.  reduce 13 (src line 162)


state 160
	statement:  VAR IDENT ASSIGN expr.    (30)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 30 (src line 196)


state 161
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	statement:  IF expr LBRACE statements.RBRACE elif else 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 179
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 162
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	statement:  WHILE expr LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 180
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 163
	statement:  FUNC CALL par_declarations RPAREN.LBRACE statements RBRACE 

	LBRACE  shift 181
	.  error


state 164
	par_declarations:  par_declarations COMMA.par_declaration 

	IDENT  shift 119
	.  error

	ident_list  goto 118
	par_declaration  goto 182

state 165
	params:  params COMMA expr.    (7)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 7 (src line 148)


state 166
	cntparams:  cntparams COMMA IDENT.COLON expr 

	COLON  shift 183
	.  error


state 167
	cntparams:  IDENT COLON expr.    (9)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 9 (src line 153)


state 168
	statement:  FOR IDENT IN expr.LBRACE statements RBRACE 
	statement:  FOR IDENT IN expr.DOUBLEDOT expr LBRACE statements RBRACE 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	LBRACE  shift 184
	DOUBLEDOT  shift 185
	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  error


state 169
	statement:  FOR IDENT COMMA IDENT.IN expr LBRACE statements RBRACE 

	IN  shift 186
	.  error


state 170
	var_declarations:  var_declarations NEWLINE var_declaration.    (93)

	.  reduce 93 (src line 286)


state 171
	contract_data:  DATA LBRACE NEWLINE var_declarations NEWLINE RBRACE.NEWLINE 

	NEWLINE  shift 187
	.  error


state 172
	var_declaration:  VAR IDENT ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 188
	index  goto 45

state 173
	case:  case CASE.exprlist LBRACE statements RBRACE NEWLINE 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 99
	index  goto 45
	exprlist  goto 189

state 174
	switch:  SWITCH expr NEWLINE case default.    (22)

	.  reduce 22 (src line 184)


state 175
	default:  DEFAULT.LBRACE statements RBRACE 

	LBRACE  shift 190
	.  error


state 176
	exprlist:  exprlist COMMA expr.    (45)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 45 (src line 216)


state 177
	exprmaplist:  exprmaplist COMMA STRING.COLON NEWLINE expr 
	exprmaplist:  exprmaplist COMMA STRING.COLON expr 

	COLON  shift 191
	.  error


state 178
	exprmaplist:  STRING COLON expr.    (46)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 46 (src line 219)


state 179
	statement:  IF expr LBRACE statements RBRACE.elif else 
	elif: .    (16)

	.  reduce 16 (src line 169)

	elif  goto 192

state 180
	statement:  WHILE expr LBRACE statements RBRACE.    (37)

	.  reduce 37 (src line 203)


state 181
	statement:  FUNC CALL par_declarations RPAREN LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 138)

	statements  goto 193

state 182
	par_declarations:  par_declarations COMMA par_declaration.    (89)

	.  reduce 89 (src line 276)


state 183
	cntparams:  cntparams COMMA IDENT COLON.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 194
	index  goto 45

state 184
	statement:  FOR IDENT IN expr LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 138)

	statements  goto 195

state 185
	statement:  FOR IDENT IN expr DOUBLEDOT.expr LBRACE statements RBRACE 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 196
	index  goto 45

state 186
	statement:  FOR IDENT COMMA IDENT IN.expr LBRACE statements RBRACE 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 197
	index  goto 45

state 187
	contract_data:  DATA LBRACE NEWLINE var_declarations NEWLINE RBRACE NEWLINE.    (95)

	.  reduce 95 (src line 291)


state 188
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 
	var_declaration:  VAR IDENT ASSIGN expr.    (91)

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 91 (src line 281)


state 189
	case:  case CASE exprlist.LBRACE statements RBRACE NEWLINE 
	exprlist:  exprlist.COMMA expr 

	COMMA  shift 154
	LBRACE  shift 198
	.  error


state 190
	default:  DEFAULT LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 138)

	statements  goto 199

state 191
	exprmaplist:  exprmaplist COMMA STRING COLON.NEWLINE expr 
	exprmaplist:  exprmaplist COMMA STRING COLON.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	NEWLINE  shift 200
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 201
	index  goto 45

state 192
	elif:  elif.ELIF expr LBRACE statements RBRACE 
	statement:  IF expr LBRACE statements RBRACE elif.else 
	else: .    (14)

	ELIF  shift 202
	ELSE  shift 204
	.  reduce 14 (src line 164)

	else  goto 203

state 193
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	statement:  FUNC CALL par_declarations RPAREN LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 205
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 194
	cntparams:  cntparams COMMA IDENT COLON expr.    (10)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 10 (src line 154)


state 195
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	statement:  FOR IDENT IN expr LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 206
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 196
	statement:  FOR IDENT IN expr DOUBLEDOT expr.LBRACE statements RBRACE 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	LBRACE  shift 207
	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  error


state 197
	statement:  FOR IDENT COMMA IDENT IN expr.LBRACE statements RBRACE 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	LBRACE  shift 208
	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  error


state 198
	case:  case CASE exprlist LBRACE.statements RBRACE NEWLINE 
	statements: .    (1)

	.  reduce 1 (src line 138)

	statements  goto 209

state 199
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	default:  DEFAULT LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 210
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 200
	exprmaplist:  exprmaplist COMMA STRING COLON NEWLINE.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 211
	index  goto 45

state 201
	exprmaplist:  exprmaplist COMMA STRING COLON expr.    (48)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 48 (src line 222)


state 202
	elif:  elif ELIF.expr LBRACE statements RBRACE 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 212
	index  goto 45

state 203
	statement:  IF expr LBRACE statements RBRACE elif else.    (32)

	.  reduce 32 (src line 198)


state 204
	else:  ELSE.LBRACE statements RBRACE 

	LBRACE  shift 213
	.  error


state 205
	statement:  FUNC CALL par_declarations RPAREN LBRACE statements RBRACE.    (38)

	.  reduce 38 (src line 204)


state 206
	statement:  FOR IDENT IN expr LBRACE statements RBRACE.    (41)

	.  reduce 41 (src line 209)


state 207
	statement:  FOR IDENT IN expr DOUBLEDOT expr LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 138)

	statements  goto 214

state 208
	statement:  FOR IDENT COMMA IDENT IN expr LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 138)

	statements  goto 215

state 209
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	case:  case CASE exprlist LBRACE statements.RBRACE NEWLINE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 216
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 210
	default:  DEFAULT LBRACE statements RBRACE.    (21)

	.  reduce 21 (src line 181)


state 211
	exprmaplist:  exprmaplist COMMA STRING COLON NEWLINE expr.    (47)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  reduce 47 (src line 221)


state 212
	elif:  elif ELIF expr.LBRACE statements RBRACE 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	LBRACE  shift 217
	ADD  shift 78
	SUB  shift 79
	MUL  shift 76
	DIV  shift 77
	MOD  shift 80
	BIT_AND  shift 89
	BIT_OR  shift 90
	BIT_XOR  shift 91
	LEFT_SHIFT  shift 92
	RIGHT_SHIFT  shift 93
	POW  shift 94
	AND  shift 81
	OR  shift 82
	EQ  shift 83
	NOT_EQ  shift 84
	LT  shift 87
	GT  shift 88
	LTE  shift 85
	GTE  shift 86
	.  error


state 213
	else:  ELSE LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 138)

	statements  goto 218

state 214
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	statement:  FOR IDENT IN expr DOUBLEDOT expr LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 219
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 215
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	statement:  FOR IDENT COMMA IDENT IN expr LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 220
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 216
	case:  case CASE exprlist LBRACE statements RBRACE.NEWLINE 

	NEWLINE  shift 221
	.  error


state 217
	elif:  elif ELIF expr LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 138)

	statements  goto 222

state 218
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	else:  ELSE LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 223
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 219
	statement:  FOR IDENT IN expr DOUBLEDOT expr LBRACE statements RBRACE.    (43)

	.  reduce 43 (src line 211)


state 220
	statement:  FOR IDENT COMMA IDENT IN expr LBRACE statements RBRACE.    (42)

	.  reduce 42 (src line 210)


state 221
	case:  case CASE exprlist LBRACE statements RBRACE NEWLINE.    (19)

	.  reduce 19 (src line 176)


state 222
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	elif:  elif ELIF expr LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 224
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 223
	else:  ELSE LBRACE statements RBRACE.    (15)

	.  reduce 15 (src line 166)


state 224
	elif:  elif ELIF expr LBRACE statements RBRACE.    (17)

	.  reduce 17 (src line 171)


73 terminals, 24 nonterminals
101 grammar rules, 225/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
73 working sets used
memory: parser 145/120000
76 extra closures
1760 shift entries, 1 exceptions
101 goto entries
83 entries saved by goto default
Optimizer space used: output 946/120000
946 table entries, 303 zero
maximum spread: 71, maximum offset: 222
