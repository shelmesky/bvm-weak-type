
state 0
	$accept: .contract_declaration $end 

	CONTRACT  shift 2
	.  error

	contract_declaration  goto 1

state 1
	$accept:  contract_declaration.$end 
	contract_declaration:  contract_declaration.NEWLINE 

	$end  accept
	NEWLINE  shift 3
	.  error


state 2
	contract_declaration:  CONTRACT.IDENT contract_read LBRACE NEWLINE contract_body RBRACE 

	IDENT  shift 4
	.  error


state 3
	contract_declaration:  contract_declaration NEWLINE.    (105)

	.  reduce 105 (src line 320)


state 4
	contract_declaration:  CONTRACT IDENT.contract_read LBRACE NEWLINE contract_body RBRACE 
	contract_read: .    (102)

	READ  shift 6
	.  reduce 102 (src line 310)

	contract_read  goto 5

state 5
	contract_declaration:  CONTRACT IDENT contract_read.LBRACE NEWLINE contract_body RBRACE 

	LBRACE  shift 7
	.  error


state 6
	contract_read:  READ.    (103)

	.  reduce 103 (src line 312)


state 7
	contract_declaration:  CONTRACT IDENT contract_read LBRACE.NEWLINE contract_body RBRACE 

	NEWLINE  shift 8
	.  error


state 8
	contract_declaration:  CONTRACT IDENT contract_read LBRACE NEWLINE.contract_body RBRACE 
	contract_data: .    (99)

	DATA  shift 11
	.  reduce 99 (src line 299)

	contract_data  goto 10
	contract_body  goto 9

state 9
	contract_declaration:  CONTRACT IDENT contract_read LBRACE NEWLINE contract_body.RBRACE 

	RBRACE  shift 12
	.  error


state 10
	contract_body:  contract_data.statements 
	statements: .    (1)

	.  reduce 1 (src line 143)

	statements  goto 13

state 11
	contract_data:  DATA.LBRACE NEWLINE var_declarations NEWLINE RBRACE NEWLINE 

	LBRACE  shift 14
	.  error


state 12
	contract_declaration:  CONTRACT IDENT contract_read LBRACE NEWLINE contract_body RBRACE.    (104)

	.  reduce 104 (src line 315)


state 13
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	contract_body:  contract_data statements.    (101)

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  reduce 101 (src line 304)

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 14
	contract_data:  DATA LBRACE.NEWLINE var_declarations NEWLINE RBRACE NEWLINE 

	NEWLINE  shift 33
	.  error


state 15
	statements:  statements NEWLINE.    (2)

	.  reduce 2 (src line 145)


state 16
	statements:  statements switch.    (3)

	.  reduce 3 (src line 146)


state 17
	statements:  statements statement.NEWLINE 

	NEWLINE  shift 34
	.  error


state 18
	switch:  SWITCH.expr NEWLINE case default 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 35
	index  goto 45

state 19
	statement:  variable.ASSIGN expr 
	statement:  variable.ADD_ASSIGN expr 
	statement:  variable.SUB_ASSIGN expr 
	statement:  variable.MUL_ASSIGN expr 
	statement:  variable.DIV_ASSIGN expr 
	statement:  variable.MOD_ASSIGN expr 
	statement:  variable.LEFT_SHIFT_ASSIGN expr 
	statement:  variable.RIGHT_SHIFT_ASSIGN expr 
	statement:  variable.BIT_AND_ASSIGN expr 
	statement:  variable.BIT_XOR_ASSIGN expr 
	statement:  variable.BIT_OR_ASSIGN expr 

	ADD_ASSIGN  shift 53
	SUB_ASSIGN  shift 54
	MUL_ASSIGN  shift 55
	DIV_ASSIGN  shift 56
	MOD_ASSIGN  shift 57
	LEFT_SHIFT_ASSIGN  shift 58
	RIGHT_SHIFT_ASSIGN  shift 59
	BIT_AND_ASSIGN  shift 60
	BIT_XOR_ASSIGN  shift 61
	BIT_OR_ASSIGN  shift 62
	ASSIGN  shift 52
	.  error


state 20
	index:  index.LBRACKET expr RBRACKET 
	statement:  index.ASSIGN expr 

	LBRACKET  shift 63
	ASSIGN  shift 64
	.  error


state 21
	statement:  VAR.IDENT ASSIGN expr 
	statement:  VAR.ident_list 

	IDENT  shift 65
	.  error

	ident_list  goto 66

state 22
	statement:  IF.expr LBRACE statements RBRACE elif else 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 67
	index  goto 45

state 23
	statement:  BREAK.    (38)

	.  reduce 38 (src line 209)


state 24
	statement:  CONTINUE.    (39)

	.  reduce 39 (src line 210)


state 25
	statement:  RETURN.    (40)
	statement:  RETURN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  reduce 40 (src line 211)

	expr  goto 68
	index  goto 45

state 26
	statement:  WHILE.expr LBRACE statements RBRACE 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 69
	index  goto 45

state 27
	statement:  FUNC.CALL par_declarations RPAREN LBRACE statements RBRACE 

	CALL  shift 70
	.  error


state 28
	statement:  CALL.params RPAREN 
	params: .    (5)

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  reduce 5 (src line 150)

	params  goto 71
	expr  goto 72
	index  goto 45

state 29
	statement:  CALLCONTRACT.cntparams RPAREN 
	cntparams: .    (8)

	IDENT  shift 74
	.  reduce 8 (src line 156)

	cntparams  goto 73

state 30
	statement:  FOR.IDENT IN expr LBRACE statements RBRACE 
	statement:  FOR.IDENT COMMA IDENT IN expr LBRACE statements RBRACE 
	statement:  FOR.IDENT IN expr DOUBLEDOT expr LBRACE statements RBRACE 

	IDENT  shift 75
	.  error


state 31
	variable:  IDENT.    (11)

	.  reduce 11 (src line 162)


state 32
	index:  INDEX.expr RBRACKET 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 76
	index  goto 45

state 33
	contract_data:  DATA LBRACE NEWLINE.var_declarations NEWLINE RBRACE NEWLINE 

	VAR  shift 79
	.  error

	var_declaration  goto 78
	var_declarations  goto 77

state 34
	statements:  statements statement NEWLINE.    (4)

	.  reduce 4 (src line 147)


state 35
	switch:  SWITCH expr.NEWLINE case default 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	NEWLINE  shift 80
	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  error


state 36
	expr:  LPAREN.expr RPAREN 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 100
	index  goto 45

state 37
	expr:  INT.    (55)

	.  reduce 55 (src line 237)


state 38
	expr:  FLOAT.    (56)

	.  reduce 56 (src line 238)


state 39
	expr:  STRING.    (57)

	.  reduce 57 (src line 239)


state 40
	expr:  QSTRING.    (58)

	.  reduce 58 (src line 240)


state 41
	expr:  TRUE.    (59)

	.  reduce 59 (src line 241)


state 42
	expr:  FALSE.    (60)

	.  reduce 60 (src line 242)


state 43
	expr:  CALL.params RPAREN 
	params: .    (5)

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  reduce 5 (src line 150)

	params  goto 101
	expr  goto 72
	index  goto 45

state 44
	expr:  CALLCONTRACT.cntparams RPAREN 
	cntparams: .    (8)

	IDENT  shift 74
	.  reduce 8 (src line 156)

	cntparams  goto 102

state 45
	index:  index.LBRACKET expr RBRACKET 
	expr:  index.    (63)

	LBRACKET  shift 63
	.  reduce 63 (src line 245)


state 46
	expr:  ENV.    (64)

	.  reduce 64 (src line 246)


state 47
	expr:  IDENT.    (65)

	.  reduce 65 (src line 247)


state 48
	expr:  LBRACKET.exprlist RBRACKET 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 104
	index  goto 45
	exprlist  goto 103

state 49
	expr:  LBRACE.exprmaplist RBRACE 

	STRING  shift 106
	.  error

	exprmaplist  goto 105

state 50
	expr:  SUB.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 107
	index  goto 45

state 51
	expr:  NOT.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 108
	index  goto 45

state 52
	statement:  variable ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 109
	index  goto 45

state 53
	statement:  variable ADD_ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 110
	index  goto 45

state 54
	statement:  variable SUB_ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 111
	index  goto 45

state 55
	statement:  variable MUL_ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 112
	index  goto 45

state 56
	statement:  variable DIV_ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 113
	index  goto 45

state 57
	statement:  variable MOD_ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 114
	index  goto 45

state 58
	statement:  variable LEFT_SHIFT_ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 115
	index  goto 45

state 59
	statement:  variable RIGHT_SHIFT_ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 116
	index  goto 45

state 60
	statement:  variable BIT_AND_ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 117
	index  goto 45

state 61
	statement:  variable BIT_XOR_ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 118
	index  goto 45

state 62
	statement:  variable BIT_OR_ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 119
	index  goto 45

state 63
	index:  index LBRACKET.expr RBRACKET 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 120
	index  goto 45

state 64
	statement:  index ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 121
	index  goto 45

state 65
	statement:  VAR IDENT.ASSIGN expr 
	ident_list:  IDENT.    (89)

	ASSIGN  shift 122
	.  reduce 89 (src line 274)


state 66
	statement:  VAR ident_list.    (36)
	ident_list:  ident_list.IDENT 

	IDENT  shift 123
	.  reduce 36 (src line 207)


state 67
	statement:  IF expr.LBRACE statements RBRACE elif else 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	LBRACE  shift 124
	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  error


state 68
	statement:  RETURN expr.    (41)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 41 (src line 212)


state 69
	statement:  WHILE expr.LBRACE statements RBRACE 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	LBRACE  shift 125
	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  error


state 70
	statement:  FUNC CALL.par_declarations RPAREN LBRACE statements RBRACE 
	par_declarations: .    (92)

	IDENT  shift 129
	.  reduce 92 (src line 283)

	ident_list  goto 128
	par_declaration  goto 127
	par_declarations  goto 126

state 71
	params:  params.COMMA expr 
	statement:  CALL params.RPAREN 

	COMMA  shift 130
	RPAREN  shift 131
	.  error


state 72
	params:  expr.    (6)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 6 (src line 152)


state 73
	cntparams:  cntparams.COMMA IDENT COLON expr 
	statement:  CALLCONTRACT cntparams.RPAREN 

	COMMA  shift 132
	RPAREN  shift 133
	.  error


state 74
	cntparams:  IDENT.COLON expr 

	COLON  shift 134
	.  error


state 75
	statement:  FOR IDENT.IN expr LBRACE statements RBRACE 
	statement:  FOR IDENT.COMMA IDENT IN expr LBRACE statements RBRACE 
	statement:  FOR IDENT.IN expr DOUBLEDOT expr LBRACE statements RBRACE 

	COMMA  shift 136
	IN  shift 135
	.  error


state 76
	index:  INDEX expr.RBRACKET 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	RBRACKET  shift 137
	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  error


state 77
	var_declarations:  var_declarations.NEWLINE var_declaration 
	contract_data:  DATA LBRACE NEWLINE var_declarations.NEWLINE RBRACE NEWLINE 

	NEWLINE  shift 138
	.  error


state 78
	var_declarations:  var_declaration.    (97)

	.  reduce 97 (src line 294)


state 79
	var_declaration:  VAR.ident_list 
	var_declaration:  VAR.IDENT ASSIGN expr 

	IDENT  shift 140
	.  error

	ident_list  goto 139

state 80
	switch:  SWITCH expr NEWLINE.case default 
	case: .    (18)

	.  reduce 18 (src line 179)

	case  goto 141

state 81
	expr:  expr MUL.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 142
	index  goto 45

state 82
	expr:  expr DIV.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 143
	index  goto 45

state 83
	expr:  expr ADD.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 144
	index  goto 45

state 84
	expr:  expr SUB.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 145
	index  goto 45

state 85
	expr:  expr MOD.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 146
	index  goto 45

state 86
	expr:  expr AND.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 147
	index  goto 45

state 87
	expr:  expr OR.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 148
	index  goto 45

state 88
	expr:  expr EQ.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 149
	index  goto 45

state 89
	expr:  expr NOT_EQ.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 150
	index  goto 45

state 90
	expr:  expr LTE.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 151
	index  goto 45

state 91
	expr:  expr GTE.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 152
	index  goto 45

state 92
	expr:  expr LT.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 153
	index  goto 45

state 93
	expr:  expr GT.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 154
	index  goto 45

state 94
	expr:  expr BIT_AND.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 155
	index  goto 45

state 95
	expr:  expr BIT_OR.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 156
	index  goto 45

state 96
	expr:  expr BIT_XOR.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 157
	index  goto 45

state 97
	expr:  expr LEFT_SHIFT.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 158
	index  goto 45

state 98
	expr:  expr RIGHT_SHIFT.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 159
	index  goto 45

state 99
	expr:  expr POW.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 160
	index  goto 45

state 100
	expr:  LPAREN expr.RPAREN 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	RPAREN  shift 161
	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  error


state 101
	params:  params.COMMA expr 
	expr:  CALL params.RPAREN 

	COMMA  shift 130
	RPAREN  shift 162
	.  error


state 102
	cntparams:  cntparams.COMMA IDENT COLON expr 
	expr:  CALLCONTRACT cntparams.RPAREN 

	COMMA  shift 132
	RPAREN  shift 163
	.  error


state 103
	exprlist:  exprlist.COMMA expr 
	expr:  LBRACKET exprlist.RBRACKET 

	COMMA  shift 164
	RBRACKET  shift 165
	.  error


state 104
	exprlist:  expr.    (49)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 49 (src line 224)


state 105
	exprmaplist:  exprmaplist.COMMA STRING COLON NEWLINE expr 
	exprmaplist:  exprmaplist.COMMA STRING COLON expr 
	expr:  LBRACE exprmaplist.RBRACE 

	COMMA  shift 166
	RBRACE  shift 167
	.  error


state 106
	exprmaplist:  STRING.COLON expr 

	COLON  shift 168
	.  error


state 107
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 
	expr:  SUB expr.    (87)

	.  reduce 87 (src line 270)


state 108
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 
	expr:  NOT expr.    (88)

	.  reduce 88 (src line 271)


state 109
	statement:  variable ASSIGN expr.    (23)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 23 (src line 193)


state 110
	statement:  variable ADD_ASSIGN expr.    (24)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 24 (src line 195)


state 111
	statement:  variable SUB_ASSIGN expr.    (25)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 25 (src line 196)


state 112
	statement:  variable MUL_ASSIGN expr.    (26)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 26 (src line 197)


state 113
	statement:  variable DIV_ASSIGN expr.    (27)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 27 (src line 198)


state 114
	statement:  variable MOD_ASSIGN expr.    (28)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 28 (src line 199)


state 115
	statement:  variable LEFT_SHIFT_ASSIGN expr.    (29)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 29 (src line 200)


state 116
	statement:  variable RIGHT_SHIFT_ASSIGN expr.    (30)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 30 (src line 201)


state 117
	statement:  variable BIT_AND_ASSIGN expr.    (31)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 31 (src line 202)


state 118
	statement:  variable BIT_XOR_ASSIGN expr.    (32)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 32 (src line 203)


state 119
	statement:  variable BIT_OR_ASSIGN expr.    (33)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 33 (src line 204)


state 120
	index:  index LBRACKET expr.RBRACKET 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	RBRACKET  shift 169
	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  error


state 121
	statement:  index ASSIGN expr.    (34)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 34 (src line 205)


state 122
	statement:  VAR IDENT ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 170
	index  goto 45

state 123
	ident_list:  ident_list IDENT.    (90)

	.  reduce 90 (src line 276)


state 124
	statement:  IF expr LBRACE.statements RBRACE elif else 
	statements: .    (1)

	.  reduce 1 (src line 143)

	statements  goto 171

state 125
	statement:  WHILE expr LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 143)

	statements  goto 172

state 126
	statement:  FUNC CALL par_declarations.RPAREN LBRACE statements RBRACE 
	par_declarations:  par_declarations.COMMA par_declaration 

	COMMA  shift 174
	RPAREN  shift 173
	.  error


state 127
	par_declarations:  par_declaration.    (93)

	.  reduce 93 (src line 285)


state 128
	ident_list:  ident_list.IDENT 
	par_declaration:  ident_list.    (91)

	IDENT  shift 123
	.  reduce 91 (src line 279)


state 129
	ident_list:  IDENT.    (89)

	.  reduce 89 (src line 274)


state 130
	params:  params COMMA.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 175
	index  goto 45

state 131
	statement:  CALL params RPAREN.    (44)

	.  reduce 44 (src line 217)


state 132
	cntparams:  cntparams COMMA.IDENT COLON expr 

	IDENT  shift 176
	.  error


state 133
	statement:  CALLCONTRACT cntparams RPAREN.    (45)

	.  reduce 45 (src line 218)


state 134
	cntparams:  IDENT COLON.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 177
	index  goto 45

state 135
	statement:  FOR IDENT IN.expr LBRACE statements RBRACE 
	statement:  FOR IDENT IN.expr DOUBLEDOT expr LBRACE statements RBRACE 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 178
	index  goto 45

state 136
	statement:  FOR IDENT COMMA.IDENT IN expr LBRACE statements RBRACE 

	IDENT  shift 179
	.  error


state 137
	index:  INDEX expr RBRACKET.    (12)

	.  reduce 12 (src line 165)


state 138
	var_declarations:  var_declarations NEWLINE.var_declaration 
	contract_data:  DATA LBRACE NEWLINE var_declarations NEWLINE.RBRACE NEWLINE 

	RBRACE  shift 181
	VAR  shift 79
	.  error

	var_declaration  goto 180

state 139
	ident_list:  ident_list.IDENT 
	var_declaration:  VAR ident_list.    (95)

	IDENT  shift 123
	.  reduce 95 (src line 289)


state 140
	ident_list:  IDENT.    (89)
	var_declaration:  VAR IDENT.ASSIGN expr 

	ASSIGN  shift 182
	.  reduce 89 (src line 274)


state 141
	case:  case.CASE exprlist LBRACE statements RBRACE NEWLINE 
	switch:  SWITCH expr NEWLINE case.default 
	default: .    (20)

	CASE  shift 183
	DEFAULT  shift 185
	.  reduce 20 (src line 184)

	default  goto 184

state 142
	expr:  expr.MUL expr 
	expr:  expr MUL expr.    (68)
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	POW  shift 99
	.  reduce 68 (src line 250)


state 143
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr DIV expr.    (69)
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	POW  shift 99
	.  reduce 69 (src line 251)


state 144
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr ADD expr.    (70)
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	.  reduce 70 (src line 252)


state 145
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr SUB expr.    (71)
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	.  reduce 71 (src line 253)


state 146
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr MOD expr.    (72)
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	POW  shift 99
	.  reduce 72 (src line 254)


state 147
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr AND expr.    (73)
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 73 (src line 255)


state 148
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr OR expr.    (74)
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 74 (src line 256)


state 149
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr EQ expr.    (75)
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	.  reduce 75 (src line 257)


state 150
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr NOT_EQ expr.    (76)
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	.  reduce 76 (src line 258)


state 151
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr LTE expr.    (77)
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	.  reduce 77 (src line 259)


state 152
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr GTE expr.    (78)
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	.  reduce 78 (src line 260)


state 153
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr LT expr.    (79)
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	.  reduce 79 (src line 261)


state 154
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr GT expr.    (80)
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	.  reduce 80 (src line 262)


state 155
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr BIT_AND expr.    (81)
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	POW  shift 99
	.  reduce 81 (src line 263)


state 156
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr BIT_OR expr.    (82)
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	POW  shift 99
	.  reduce 82 (src line 264)


state 157
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr BIT_XOR expr.    (83)
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	POW  shift 99
	.  reduce 83 (src line 265)


state 158
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr LEFT_SHIFT expr.    (84)
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	POW  shift 99
	.  reduce 84 (src line 266)


state 159
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr RIGHT_SHIFT expr.    (85)
	expr:  expr.POW expr 

	POW  shift 99
	.  reduce 85 (src line 267)


state 160
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 
	expr:  expr POW expr.    (86)

	POW  shift 99
	.  reduce 86 (src line 268)


state 161
	expr:  LPAREN expr RPAREN.    (54)

	.  reduce 54 (src line 235)


state 162
	expr:  CALL params RPAREN.    (61)

	.  reduce 61 (src line 243)


state 163
	expr:  CALLCONTRACT cntparams RPAREN.    (62)

	.  reduce 62 (src line 244)


state 164
	exprlist:  exprlist COMMA.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 186
	index  goto 45

state 165
	expr:  LBRACKET exprlist RBRACKET.    (66)

	.  reduce 66 (src line 248)


state 166
	exprmaplist:  exprmaplist COMMA.STRING COLON NEWLINE expr 
	exprmaplist:  exprmaplist COMMA.STRING COLON expr 

	STRING  shift 187
	.  error


state 167
	expr:  LBRACE exprmaplist RBRACE.    (67)

	.  reduce 67 (src line 249)


state 168
	exprmaplist:  STRING COLON.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 188
	index  goto 45

state 169
	index:  index LBRACKET expr RBRACKET.    (13)

	.  reduce 13 (src line 167)


state 170
	statement:  VAR IDENT ASSIGN expr.    (35)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 35 (src line 206)


state 171
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	statement:  IF expr LBRACE statements.RBRACE elif else 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 189
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 172
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	statement:  WHILE expr LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 190
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 173
	statement:  FUNC CALL par_declarations RPAREN.LBRACE statements RBRACE 

	LBRACE  shift 191
	.  error


state 174
	par_declarations:  par_declarations COMMA.par_declaration 

	IDENT  shift 129
	.  error

	ident_list  goto 128
	par_declaration  goto 192

state 175
	params:  params COMMA expr.    (7)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 7 (src line 153)


state 176
	cntparams:  cntparams COMMA IDENT.COLON expr 

	COLON  shift 193
	.  error


state 177
	cntparams:  IDENT COLON expr.    (9)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 9 (src line 158)


state 178
	statement:  FOR IDENT IN expr.LBRACE statements RBRACE 
	statement:  FOR IDENT IN expr.DOUBLEDOT expr LBRACE statements RBRACE 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	LBRACE  shift 194
	DOUBLEDOT  shift 195
	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  error


state 179
	statement:  FOR IDENT COMMA IDENT.IN expr LBRACE statements RBRACE 

	IN  shift 196
	.  error


state 180
	var_declarations:  var_declarations NEWLINE var_declaration.    (98)

	.  reduce 98 (src line 296)


state 181
	contract_data:  DATA LBRACE NEWLINE var_declarations NEWLINE RBRACE.NEWLINE 

	NEWLINE  shift 197
	.  error


state 182
	var_declaration:  VAR IDENT ASSIGN.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 198
	index  goto 45

state 183
	case:  case CASE.exprlist LBRACE statements RBRACE NEWLINE 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 104
	index  goto 45
	exprlist  goto 199

state 184
	switch:  SWITCH expr NEWLINE case default.    (22)

	.  reduce 22 (src line 189)


state 185
	default:  DEFAULT.LBRACE statements RBRACE 

	LBRACE  shift 200
	.  error


state 186
	exprlist:  exprlist COMMA expr.    (50)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 50 (src line 226)


state 187
	exprmaplist:  exprmaplist COMMA STRING.COLON NEWLINE expr 
	exprmaplist:  exprmaplist COMMA STRING.COLON expr 

	COLON  shift 201
	.  error


state 188
	exprmaplist:  STRING COLON expr.    (51)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 51 (src line 229)


state 189
	statement:  IF expr LBRACE statements RBRACE.elif else 
	elif: .    (16)

	.  reduce 16 (src line 174)

	elif  goto 202

state 190
	statement:  WHILE expr LBRACE statements RBRACE.    (42)

	.  reduce 42 (src line 213)


state 191
	statement:  FUNC CALL par_declarations RPAREN LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 143)

	statements  goto 203

state 192
	par_declarations:  par_declarations COMMA par_declaration.    (94)

	.  reduce 94 (src line 286)


state 193
	cntparams:  cntparams COMMA IDENT COLON.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 204
	index  goto 45

state 194
	statement:  FOR IDENT IN expr LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 143)

	statements  goto 205

state 195
	statement:  FOR IDENT IN expr DOUBLEDOT.expr LBRACE statements RBRACE 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 206
	index  goto 45

state 196
	statement:  FOR IDENT COMMA IDENT IN.expr LBRACE statements RBRACE 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 207
	index  goto 45

state 197
	contract_data:  DATA LBRACE NEWLINE var_declarations NEWLINE RBRACE NEWLINE.    (100)

	.  reduce 100 (src line 301)


state 198
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 
	var_declaration:  VAR IDENT ASSIGN expr.    (96)

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 96 (src line 291)


state 199
	case:  case CASE exprlist.LBRACE statements RBRACE NEWLINE 
	exprlist:  exprlist.COMMA expr 

	COMMA  shift 164
	LBRACE  shift 208
	.  error


state 200
	default:  DEFAULT LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 143)

	statements  goto 209

state 201
	exprmaplist:  exprmaplist COMMA STRING COLON.NEWLINE expr 
	exprmaplist:  exprmaplist COMMA STRING COLON.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	NEWLINE  shift 210
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 211
	index  goto 45

state 202
	elif:  elif.ELIF expr LBRACE statements RBRACE 
	statement:  IF expr LBRACE statements RBRACE elif.else 
	else: .    (14)

	ELIF  shift 212
	ELSE  shift 214
	.  reduce 14 (src line 169)

	else  goto 213

state 203
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	statement:  FUNC CALL par_declarations RPAREN LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 215
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 204
	cntparams:  cntparams COMMA IDENT COLON expr.    (10)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 10 (src line 159)


state 205
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	statement:  FOR IDENT IN expr LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 216
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 206
	statement:  FOR IDENT IN expr DOUBLEDOT expr.LBRACE statements RBRACE 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	LBRACE  shift 217
	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  error


state 207
	statement:  FOR IDENT COMMA IDENT IN expr.LBRACE statements RBRACE 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	LBRACE  shift 218
	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  error


state 208
	case:  case CASE exprlist LBRACE.statements RBRACE NEWLINE 
	statements: .    (1)

	.  reduce 1 (src line 143)

	statements  goto 219

state 209
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	default:  DEFAULT LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 220
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 210
	exprmaplist:  exprmaplist COMMA STRING COLON NEWLINE.expr 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 221
	index  goto 45

state 211
	exprmaplist:  exprmaplist COMMA STRING COLON expr.    (53)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 53 (src line 232)


state 212
	elif:  elif ELIF.expr LBRACE statements RBRACE 

	IDENT  shift 47
	ENV  shift 46
	CALL  shift 43
	CALLCONTRACT  shift 44
	INDEX  shift 32
	INT  shift 37
	FLOAT  shift 38
	STRING  shift 39
	QSTRING  shift 40
	TRUE  shift 41
	FALSE  shift 42
	LPAREN  shift 36
	LBRACE  shift 49
	LBRACKET  shift 48
	SUB  shift 50
	NOT  shift 51
	.  error

	expr  goto 222
	index  goto 45

state 213
	statement:  IF expr LBRACE statements RBRACE elif else.    (37)

	.  reduce 37 (src line 208)


state 214
	else:  ELSE.LBRACE statements RBRACE 

	LBRACE  shift 223
	.  error


state 215
	statement:  FUNC CALL par_declarations RPAREN LBRACE statements RBRACE.    (43)

	.  reduce 43 (src line 214)


state 216
	statement:  FOR IDENT IN expr LBRACE statements RBRACE.    (46)

	.  reduce 46 (src line 219)


state 217
	statement:  FOR IDENT IN expr DOUBLEDOT expr LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 143)

	statements  goto 224

state 218
	statement:  FOR IDENT COMMA IDENT IN expr LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 143)

	statements  goto 225

state 219
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	case:  case CASE exprlist LBRACE statements.RBRACE NEWLINE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 226
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 220
	default:  DEFAULT LBRACE statements RBRACE.    (21)

	.  reduce 21 (src line 186)


state 221
	exprmaplist:  exprmaplist COMMA STRING COLON NEWLINE expr.    (52)
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  reduce 52 (src line 231)


state 222
	elif:  elif ELIF expr.LBRACE statements RBRACE 
	expr:  expr.MUL expr 
	expr:  expr.DIV expr 
	expr:  expr.ADD expr 
	expr:  expr.SUB expr 
	expr:  expr.MOD expr 
	expr:  expr.AND expr 
	expr:  expr.OR expr 
	expr:  expr.EQ expr 
	expr:  expr.NOT_EQ expr 
	expr:  expr.LTE expr 
	expr:  expr.GTE expr 
	expr:  expr.LT expr 
	expr:  expr.GT expr 
	expr:  expr.BIT_AND expr 
	expr:  expr.BIT_OR expr 
	expr:  expr.BIT_XOR expr 
	expr:  expr.LEFT_SHIFT expr 
	expr:  expr.RIGHT_SHIFT expr 
	expr:  expr.POW expr 

	LBRACE  shift 227
	ADD  shift 83
	SUB  shift 84
	MUL  shift 81
	DIV  shift 82
	MOD  shift 85
	BIT_AND  shift 94
	BIT_OR  shift 95
	BIT_XOR  shift 96
	LEFT_SHIFT  shift 97
	RIGHT_SHIFT  shift 98
	POW  shift 99
	AND  shift 86
	OR  shift 87
	EQ  shift 88
	NOT_EQ  shift 89
	LT  shift 92
	GT  shift 93
	LTE  shift 90
	GTE  shift 91
	.  error


state 223
	else:  ELSE LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 143)

	statements  goto 228

state 224
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	statement:  FOR IDENT IN expr DOUBLEDOT expr LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 229
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 225
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	statement:  FOR IDENT COMMA IDENT IN expr LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 230
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 226
	case:  case CASE exprlist LBRACE statements RBRACE.NEWLINE 

	NEWLINE  shift 231
	.  error


state 227
	elif:  elif ELIF expr LBRACE.statements RBRACE 
	statements: .    (1)

	.  reduce 1 (src line 143)

	statements  goto 232

state 228
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	else:  ELSE LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 233
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 229
	statement:  FOR IDENT IN expr DOUBLEDOT expr LBRACE statements RBRACE.    (48)

	.  reduce 48 (src line 221)


state 230
	statement:  FOR IDENT COMMA IDENT IN expr LBRACE statements RBRACE.    (47)

	.  reduce 47 (src line 220)


state 231
	case:  case CASE exprlist LBRACE statements RBRACE NEWLINE.    (19)

	.  reduce 19 (src line 181)


state 232
	statements:  statements.NEWLINE 
	statements:  statements.switch 
	statements:  statements.statement NEWLINE 
	elif:  elif ELIF expr LBRACE statements.RBRACE 

	IDENT  shift 31
	CALL  shift 28
	CALLCONTRACT  shift 29
	INDEX  shift 32
	NEWLINE  shift 15
	RBRACE  shift 234
	BREAK  shift 23
	CONTINUE  shift 24
	IF  shift 22
	RETURN  shift 25
	WHILE  shift 26
	FUNC  shift 27
	FOR  shift 30
	SWITCH  shift 18
	VAR  shift 21
	.  error

	variable  goto 19
	switch  goto 16
	statement  goto 17
	index  goto 20

state 233
	else:  ELSE LBRACE statements RBRACE.    (15)

	.  reduce 15 (src line 171)


state 234
	elif:  elif ELIF expr LBRACE statements RBRACE.    (17)

	.  reduce 17 (src line 176)


78 terminals, 24 nonterminals
106 grammar rules, 235/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
73 working sets used
memory: parser 155/120000
76 extra closures
1940 shift entries, 1 exceptions
106 goto entries
88 entries saved by goto default
Optimizer space used: output 1005/120000
1005 table entries, 352 zero
maximum spread: 76, maximum offset: 232
